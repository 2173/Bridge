"use strict";Bridge.define("ClientTestLibrary.TestStringFunctions",{statics:{strings:function(assert){var $t,isPhantomJs=Bridge.get(ClientTestLibrary.Utilities.BrowserHelper).isPhantomJs(),expectedCount=isPhantomJs?28:48,s,anyOf,sAnyOf,s1,s2,threeIs,sc;if(assert.expect(expectedCount),s="HELLO".toLowerCase(),assert.deepEqual(s,"hello","'HELLO'.ToLower()"),s="HELLO".toLowerCase(),assert.deepEqual(s,"hello","'HELLO'.ToLowerCase()"),s="HELLO".toLocaleLowerCase(),assert.deepEqual(s,"hello","'HELLO'.ToLocaleLowerCase()"),s="hello".toUpperCase(),assert.deepEqual(s,"HELLO","'hello'.ToUpper()"),s="hello".toUpperCase(),assert.deepEqual(s,"HELLO","'hello'.ToUpperCase()"),s="HELLO".toLocaleUpperCase(),assert.deepEqual(s,"HELLO","'hello'.ToLocaleUpperCase()"),s="Hello Bridge.NET",assert.deepEqual(String(s),s,"new String('"+s+"')"),assert.deepEqual(Bridge.String.fromCharCount(45,4),"----","new String('-',4)"),anyOf=[120,98,105],sAnyOf="['x','b','i']",assert.deepEqual(Bridge.String.indexOfAny(s,anyOf),8,"'"+s+"'.IndexOfAny("+sAnyOf+")"),assert.throws(function(){Bridge.String.indexOfAny(s,anyOf,18,8)},"'"+s+"'.IndexOfAny("+sAnyOf+")"),assert.throws(function(){Bridge.String.indexOfAny(s,null)},"'"+s+"'.IndexOfAny(null)"),s="",assert.deepEqual(Bridge.String.indexOfAny(s,anyOf),-1,"String.Empty.IndexOfAny("+sAnyOf+")"),s=null,assert.deepEqual(Bridge.String.indexOfAny(s,anyOf),-1,"null.IndexOfAny("+sAnyOf+")"),s="Hello Bridge.NET",assert.deepEqual(Bridge.String.indexOf(s,String.fromCharCode(101)),1,"'"+s+"'.IndexOf('e')"),assert.deepEqual(Bridge.String.indexOf(s,"e."),11,"'"+s+"'.IndexOf('e.')"),assert.deepEqual(Bridge.String.indexOf(s,String.fromCharCode(101),6,8),11,"'"+s+"'.IndexOf('e', 6, 8)"),assert.throws(function(){Bridge.String.indexOf(s,null)},"'"+s+"'.IndexOf(null)"),isPhantomJs||assert.deepEqual(Bridge.String.indexOf(s,"E",6,8,1),11,"'"+s+"'.IndexOf('E', 6, 8, StringComparison.CurrentCultureIgnoreCase)"),s="",assert.deepEqual(Bridge.String.indexOf(s,String.fromCharCode(101)),-1,"String.Empty.IndexOf('e')"),s=null,assert.deepEqual(Bridge.String.indexOf(s,String.fromCharCode(101)),-1,"null.IndexOf('e')"),s1="Animal",s2="animal",assert.deepEqual(Bridge.String.compare(s1,s2,!0),0,"String.Compare('"+s1+"', '"+s2+"', true)"),isPhantomJs||assert.deepEqual(Bridge.String.compare(s1,s2,!1),1,"String.Compare('"+s1+"', '"+s2+"', false)"),!isPhantomJs){threeIs=Bridge.Array.init(3,null);threeIs[0]="i";threeIs[1]="ı";threeIs[2]="I";var expected=[-1,-1,1,-1,0,1,-1,-1,1,-1,0,1,-1,1,1,0,0,0],expectedIndex=0;for($t=Bridge.getEnumerator([0,1,2,3,4,5]);$t.moveNext();)sc=$t.getCurrent(),Bridge.get(ClientTestLibrary.TestStringFunctions).test(0,1,sc,threeIs,expected,expectedIndex++,assert),Bridge.get(ClientTestLibrary.TestStringFunctions).test(0,2,sc,threeIs,expected,expectedIndex++,assert),Bridge.get(ClientTestLibrary.TestStringFunctions).test(1,2,sc,threeIs,expected,expectedIndex++,assert)}s="Hello Bridge.NET";assert.deepEqual(Bridge.String.contains(s,"Bridge"),!0,"'"+s+"'.Contains('Bridge')");assert.deepEqual(Bridge.String.contains(s,""),!0,"'"+s+"'.Contains(String.Empty)");assert.deepEqual(Bridge.String.contains("","Bridge"),!1,"String.Empty.Contains('Bridge')");assert.throws(function(){Bridge.String.contains(s,null)},"null.Contains('Bridge')");s=[s,"2","3","4"].join("");assert.deepEqual(s,"Hello Bridge.NET234","string.Concat()");s="nulltrue3false";assert.deepEqual(s,"true3false","string.Concat()");s=["1","2","3","4","5"].toString().split(",").join("");assert.deepEqual(s,"12345","string.Concat()");s=[1,null,2,null,3].toString().split(",").join("");assert.deepEqual(s,"123","string.Concat()")},test:function(x,y,comparison,testI,expected,expectedIndex,assert){var cmpValue=0;cmpValue=Bridge.String.compare(testI[x],testI[y],comparison);assert.deepEqual(cmpValue,expected[expectedIndex],"String.Compare('"+testI[x]+"', '"+testI[y]+"',"+comparison+")")},enumerable:function(assert){var $t,a,i,result,c;for(assert.expect(5),i=0,result=Bridge.Array.init(5,function(){return new Bridge.Int}),$t=Bridge.getEnumerator("danny");$t.moveNext();)c=$t.getCurrent(),a=c,result[i]=a,i++;assert.equal(result[0],100);assert.equal(result[1],97);assert.equal(result[2],110);assert.equal(result[3],110);assert.equal(result[4],121)},issueBridge393:function(assert){assert.expect(2);var result=Bridge.String.equals("testa","testa",3);assert.ok(result,"testa testa StringComparison.InvariantCultureIgnoreCase");var result1=Bridge.String.equals("testa","testb",3);assert.notOk(result1,"testa testb StringComparison.InvariantCultureIgnoreCase")}}});Bridge.init();