"use strict";Bridge.define("ClientTestLibrary.Class391",{statics:{main:function(){for(var $t1,$t2,$t3,TestArray1=["TestA","TestB","TestC"],TestArray2=["TestA","TestB","TestC"],doSomething=!1,x,y,x1,y1,$t=Bridge.getEnumerator(TestArray1);$t.moveNext();)for(x=$t.getCurrent(),$t1=Bridge.getEnumerator(TestArray2);$t1.moveNext();)y=$t1.getCurrent(),doSomething=Bridge.String.equals(x,y);for($t2=Bridge.getEnumerator(TestArray1);$t2.moveNext();)for(x1=$t2.getCurrent(),$t3=Bridge.getEnumerator(TestArray2);$t3.moveNext();)y1=$t3.getCurrent(),doSomething=Bridge.String.equals(x1,y1)}}});Bridge.define("ClientTestLibrary.Class59",{statics:{method1:function(){}},method1:function(){}});Bridge.define("ClientTestLibrary.Class59.Aux1");Bridge.define("ClientTestLibrary.Class64",{constructor:function(){},constructor$1:function(){},test:function(){var aux=new ClientTestLibrary.Class64.Aux1;new ClientTestLibrary.Class64("constructor$1",aux)}});Bridge.define("ClientTestLibrary.Class64.Aux1");Bridge.define("ClientTestLibrary.Class65_1");Bridge.define("ClientTestLibrary.Class65_1.Nested");Bridge.define("ClientTestLibrary.Class65_2",{inherits:[ClientTestLibrary.Class65_1.Nested]});Bridge.define("ClientTestLibrary.Class84",{test1:function(){try{}catch($e){$e=Bridge.Exception.create($e)}}});Bridge.define("ClientTestLibrary.Rectangle66",{statics:{getDefaultValue:function(){return new ClientTestLibrary.Rectangle66}},constructor$1:function(){new ClientTestLibrary.Rectangle66("constructor").$clone(this)},constructor$2:function(){},constructor:function(){},$clone:function(){return this}});Bridge.init();