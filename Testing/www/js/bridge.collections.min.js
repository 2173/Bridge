"use strict";Bridge.define("Bridge.Collections.BitArray",{inherits:[Bridge.ICollection,Bridge.ICloneable],statics:{BitsPerInt32:32,BytesPerInt32:4,BitsPerByte:8,_ShrinkThreshold:256,getArrayLength:function(n,div){return n>0?Bridge.Int.div(n-1,div)+1:0}},m_array:null,m_length:0,_version:0,constructor$3:function(length){Bridge.Collections.BitArray.prototype.constructor$4.call(this,length,!1)},constructor$4:function(length,defaultValue){var fillValue,i;if(length<0)throw new Bridge.ArgumentOutOfRangeException("length","Index is less than zero.");for(this.m_array=Bridge.Array.init(Bridge.get(Bridge.Collections.BitArray).getArrayLength(length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),0),this.m_length=length,fillValue=defaultValue?Bridge.cast(4294967295,Bridge.Int):0,i=0;i<this.m_array.length;i++)this.m_array[i]=fillValue;this._version=0},constructor$1:function(bytes){var i,j,r;if(bytes===null)throw new Bridge.ArgumentNullException("bytes");if(bytes.length>268435455)throw new Bridge.ArgumentException(Bridge.String.format("The input array length must not exceed Int32.MaxValue / {0}. Otherwise BitArray.Length would exceed Int32.MaxValue.",Bridge.get(Bridge.Collections.BitArray).BitsPerByte),"bytes");for(this.m_array=Bridge.Array.init(Bridge.get(Bridge.Collections.BitArray).getArrayLength(bytes.length,Bridge.get(Bridge.Collections.BitArray).BytesPerInt32),0),this.m_length=bytes.length*Bridge.get(Bridge.Collections.BitArray).BitsPerByte,i=0,j=0;bytes.length-j>=4;)this.m_array[i++]=bytes[j]&255|(bytes[j+1]&255)<<8|(bytes[j+2]&255)<<16|(bytes[j+3]&255)<<24,j+=4;r=bytes.length-j;r===3&&(this.m_array[i]=(bytes[j+2]&255)<<16,r=2);r===2&&(this.m_array[i]|=(bytes[j+1]&255)<<8,r=1);r===1&&(this.m_array[i]|=bytes[j]&255);this._version=0},constructor:function(values){if(values===null)throw new Bridge.ArgumentNullException("values");this.m_array=Bridge.Array.init(Bridge.get(Bridge.Collections.BitArray).getArrayLength(values.length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),0);this.m_length=values.length;for(var i=0;i<values.length;i++)values[i]&&(this.m_array[Bridge.Int.div(i,32)]|=1<<i%32);this._version=0},constructor$5:function(values){if(values===null)throw new Bridge.ArgumentNullException("values");if(values.length>67108863)throw new Bridge.ArgumentException(Bridge.String.format("The input array length must not exceed Int32.MaxValue / {0}. Otherwise BitArray.Length would exceed Int32.MaxValue.",Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),"values");this.m_array=Bridge.Array.init(values.length,0);this.m_length=values.length*Bridge.get(Bridge.Collections.BitArray).BitsPerInt32;Bridge.Array.copy(values,0,this.m_array,0,values.length);this._version=0},constructor$2:function(bits){if(bits===null)throw new Bridge.ArgumentNullException("bits");var arrayLength=Bridge.get(Bridge.Collections.BitArray).getArrayLength(bits.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32);this.m_array=Bridge.Array.init(arrayLength,0);this.m_length=bits.m_length;Bridge.Array.copy(bits.m_array,0,this.m_array,0,arrayLength);this._version=bits._version},getItem:function(index){return this.get(index)},setItem:function(index,value){this.set(index,value)},getLength:function(){return this.m_length},setLength:function(value){var newints,newarray,last,bits;if(value<0)throw new Bridge.ArgumentOutOfRangeException("value","Non-negative number required.");newints=Bridge.get(Bridge.Collections.BitArray).getArrayLength(value,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32);(newints>this.m_array.length||newints+Bridge.get(Bridge.Collections.BitArray)._ShrinkThreshold<this.m_array.length)&&(newarray=Bridge.Array.init(newints,0),Bridge.Array.copy(this.m_array,0,newarray,0,newints>this.m_array.length?this.m_array.length:newints),this.m_array=newarray);value>this.m_length&&(last=Bridge.get(Bridge.Collections.BitArray).getArrayLength(this.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32)-1,bits=this.m_length%32,bits>0&&(this.m_array[last]&=(1<<bits)-1),Bridge.Array.fill(this.m_array,Bridge.Int.getDefaultValue||Bridge.getDefaultValue(Bridge.Int),last+1,newints-last-1));this.m_length=value;this._version++},getCount:function(){return this.m_length},getIsReadOnly:function(){return!1},getIsSynchronized:function(){return!1},get:function(index){if(index<0||index>=this.getLength())throw new Bridge.ArgumentOutOfRangeException("index","Index was out of range. Must be non-negative and less than the size of the collection.");return(this.m_array[Bridge.Int.div(index,32)]&1<<index%32)!=0},set:function(index,value){if(index<0||index>=this.getLength())throw new Bridge.ArgumentOutOfRangeException("index","Index was out of range. Must be non-negative and less than the size of the collection.");value?this.m_array[Bridge.Int.div(index,32)]|=1<<index%32:this.m_array[Bridge.Int.div(index,32)]&=~(1<<index%32);this._version++},setAll:function(value){for(var fillValue=value?Bridge.cast(4294967295,Bridge.Int):0,ints=Bridge.get(Bridge.Collections.BitArray).getArrayLength(this.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),i=0;i<ints;i++)this.m_array[i]=fillValue;this._version++},and:function(value){var ints,i;if(value===null)throw new Bridge.ArgumentNullException("value");if(this.getLength()!==value.getLength())throw new Bridge.ArgumentException("Array lengths must be the same.");for(ints=Bridge.get(Bridge.Collections.BitArray).getArrayLength(this.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),i=0;i<ints;i++)this.m_array[i]&=value.m_array[i];return this._version++,this},or:function(value){var ints,i;if(value===null)throw new Bridge.ArgumentNullException("value");if(this.getLength()!==value.getLength())throw new Bridge.ArgumentException("Array lengths must be the same.");for(ints=Bridge.get(Bridge.Collections.BitArray).getArrayLength(this.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),i=0;i<ints;i++)this.m_array[i]|=value.m_array[i];return this._version++,this},xor:function(value){var ints,i;if(value===null)throw new Bridge.ArgumentNullException("value");if(this.getLength()!==value.getLength())throw new Bridge.ArgumentException("Array lengths must be the same.");for(ints=Bridge.get(Bridge.Collections.BitArray).getArrayLength(this.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),i=0;i<ints;i++)this.m_array[i]^=value.m_array[i];return this._version++,this},not:function(){for(var ints=Bridge.get(Bridge.Collections.BitArray).getArrayLength(this.m_length,Bridge.get(Bridge.Collections.BitArray).BitsPerInt32),i=0;i<ints;i++)this.m_array[i]=~this.m_array[i];return this._version++,this},clone:function(){var bitArray=new Bridge.Collections.BitArray("constructor$5",this.m_array);return bitArray._version=this._version,bitArray.m_length=this.m_length,bitArray},getEnumerator:function(){return new Bridge.Collections.BitArray.BitArrayEnumeratorSimple(this)}});Bridge.define("Bridge.Collections.BitArray.BitArrayEnumeratorSimple",{inherits:[Bridge.IEnumerator],bitarray:null,index:0,version:0,currentElement:!1,constructor:function(bitarray){this.bitarray=bitarray;this.index=-1;this.version=bitarray._version},getCurrent:function(){if(this.index===-1)throw new Bridge.InvalidOperationException("Enumeration has not started. Call MoveNext.");if(this.index>=this.bitarray.getCount())throw new Bridge.InvalidOperationException("Enumeration already finished.");return this.currentElement},moveNext:function(){if(this.version!==this.bitarray._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");return this.index<this.bitarray.getCount()-1?(this.index++,this.currentElement=this.bitarray.get(this.index),!0):(this.index=this.bitarray.getCount(),!1)},reset:function(){if(this.version!==this.bitarray._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");this.index=-1}});Bridge.define("Bridge.Collections.BitHelper",{statics:{MarkedBitFlag:1,IntSize:32,toIntArrayLength:function(n){return n>0?Bridge.Int.div(n-1,Bridge.get(Bridge.Collections.BitHelper).IntSize)+1:0}},_length:0,_array:null,constructor:function(bitArray,length){this._array=bitArray;this._length=length},markBit:function(bitPosition){var bitArrayIndex=Bridge.Int.div(bitPosition,Bridge.get(Bridge.Collections.BitHelper).IntSize),flag;bitArrayIndex<this._length&&bitArrayIndex>=0&&(flag=Bridge.get(Bridge.Collections.BitHelper).MarkedBitFlag<<bitPosition%Bridge.get(Bridge.Collections.BitHelper).IntSize,this._array[bitArrayIndex]|=flag)},isMarked:function(bitPosition){var bitArrayIndex=Bridge.Int.div(bitPosition,Bridge.get(Bridge.Collections.BitHelper).IntSize),flag;return bitArrayIndex<this._length&&bitArrayIndex>=0?(flag=Bridge.get(Bridge.Collections.BitHelper).MarkedBitFlag<<bitPosition%Bridge.get(Bridge.Collections.BitHelper).IntSize,(this._array[bitArrayIndex]&flag)!=0):!1}});Bridge.define("Bridge.Collections.EnumerableHelpers",{statics:{toArray:function(T){return Bridge.fn.bind(this,function(source){var count={},results=Bridge.get(Bridge.Collections.EnumerableHelpers).toArray$1(T)(source,count);return Bridge.Array.resize(results,count.v,T.getDefaultValue||Bridge.getDefaultValue(T)),results})},toArray$1:function(T){return Bridge.fn.bind(this,function(source,length){var en=Bridge.getEnumerator(source,"$1"),DefaultCapacity,arr,count,MaxArrayLength,newLength;try{if(en.moveNext()){for(DefaultCapacity=4,arr=Bridge.Array.init(DefaultCapacity,null),arr[0]=en.getCurrent$1(),count=1;en.moveNext();)count===arr.length&&(MaxArrayLength=2146435071,newLength=count<<1,Bridge.cast(newLength,Bridge.Int)>MaxArrayLength&&(newLength=MaxArrayLength<=count?count+1:MaxArrayLength),Bridge.Array.resize(arr,newLength,T.getDefaultValue||Bridge.getDefaultValue(T))),arr[count++]=en.getCurrent$1();return length.v=count,arr}}finally{Bridge.hasValue(en)&&en.dispose()}return length.v=0,Bridge.Array.init(0,null)})}}});Bridge.define("Bridge.Collections.HashHelpers",{statics:{HashPrime:101,MaxPrimeArrayLength:2146435069,config:{init:function(){this.primes=[3,7,11,17,23,29,37,47,59,71,89,107,131,163,197,239,293,353,431,521,631,761,919,1103,1327,1597,1931,2333,2801,3371,4049,4861,5839,7013,8419,10103,12143,14591,17519,21023,25229,30293,36353,43627,52361,62851,75431,90523,108631,130363,156437,187751,225307,270371,324449,389357,467237,560689,672827,807403,968897,1162687,1395263,1674319,2009191,2411033,2893249,3471899,4166287,4999559,5999471,7199369]}},isPrime:function(candidate){var limit,divisor;if((candidate&1)!=0){for(limit=Bridge.Int.trunc(Math.sqrt(candidate)),divisor=3;divisor<=limit;divisor+=2)if(candidate%divisor==0)return!1;return!0}return candidate===2},getPrime:function(min){var i,prime,i1;if(min<0)throw new Bridge.ArgumentException("Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table.");for(i=0;i<Bridge.get(Bridge.Collections.HashHelpers).primes.length;i++)if(prime=Bridge.get(Bridge.Collections.HashHelpers).primes[i],prime>=min)return prime;for(i1=min|1;i1<2147483647;i1+=2)if(Bridge.get(Bridge.Collections.HashHelpers).isPrime(i1)&&(i1-1)%Bridge.get(Bridge.Collections.HashHelpers).HashPrime!=0)return i1;return min},getMinPrime:function(){return Bridge.get(Bridge.Collections.HashHelpers).primes[0]},expandPrime:function(oldSize){var newSize=2*oldSize;return Bridge.cast(newSize,Bridge.Int)>Bridge.get(Bridge.Collections.HashHelpers).MaxPrimeArrayLength&&Bridge.get(Bridge.Collections.HashHelpers).MaxPrimeArrayLength>oldSize?Bridge.get(Bridge.Collections.HashHelpers).MaxPrimeArrayLength:Bridge.get(Bridge.Collections.HashHelpers).getPrime(newSize)}}});Bridge.define("Bridge.Collections.HashSet$1",function(T){return{inherits:[Bridge.ICollection$1(T),Bridge.ISet$1(T)],statics:{Lower31BitMask:2147483647,ShrinkThreshold:3,hashSetEquals:function(set1,set2,comparer){var $t,$t1,$t2,item,set2Item,found,set1Item;if(set1===null)return set2===null;if(set2===null)return!1;if(Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(set1,set2)){if(set1.getCount()!==set2.getCount())return!1;for($t=Bridge.getEnumerator(set2);$t.moveNext();)if(item=$t.getCurrent(),!set1.contains(item))return!1;return!0}for($t1=Bridge.getEnumerator(set2);$t1.moveNext();){for(set2Item=$t1.getCurrent(),found=!1,$t2=Bridge.getEnumerator(set1);$t2.moveNext();)if(set1Item=$t2.getCurrent(),comparer.equals(set2Item,set1Item)){found=!0;break}if(!found)return!1}return!0},areEqualityComparersEqual:function(set1,set2){return Bridge.equals(set1.getComparer(),set2.getComparer())}},_buckets:null,_slots:null,_count:0,_lastIndex:0,_freeList:0,_comparer:null,_version:0,constructor:function(){Bridge.Collections.HashSet$1(T).prototype.constructor$3.call(this,new Bridge.EqualityComparer$1(T)())},constructor$3:function(comparer){comparer===null&&(comparer=new Bridge.EqualityComparer$1(T)());this._comparer=comparer;this._lastIndex=0;this._count=0;this._freeList=-1;this._version=0},constructor$1:function(collection){Bridge.Collections.HashSet$1(T).prototype.constructor$2.call(this,collection,new Bridge.EqualityComparer$1(T)())},constructor$2:function(collection,comparer){if(Bridge.Collections.HashSet$1(T).prototype.constructor$3.call(this,comparer),collection===null)throw new Bridge.ArgumentNullException("collection");var suggestedCapacity=0,coll=Bridge.as(collection,Bridge.ICollection$1(T));coll!==null&&(suggestedCapacity=Bridge.Array.getCount(coll));this.initialize(suggestedCapacity);this.unionWith(collection);(this._count===0&&this._slots.length>Bridge.get(Bridge.Collections.HashHelpers).getMinPrime()||this._count>0&&Bridge.Int.div(this._slots.length,this._count)>Bridge.get(Bridge.Collections.HashSet$1(T)).ShrinkThreshold)&&this.trimExcess()},getCount:function(){return this._count},getComparer:function(){return this._comparer},add:function(item){this.addIfNotPresent(item)},add$1:function(item){return this.addIfNotPresent(item)},clear:function(){var i,i1;if(this._lastIndex>0){for(i=0;i<this._lastIndex;i++)this._slots[i]=new Bridge.Collections.HashSet$1.Slot(T)();for(i1=0;i1<this._buckets.length;i1++)this._buckets[i1]=0;this._lastIndex=0;this._count=0;this._freeList=-1}this._version++},arrayClear:function(){},contains:function(item){var hashCode,i;if(this._buckets!==null)for(hashCode=this.internalGetHashCode(item),i=this._buckets[hashCode%this._buckets.length]-1;i>=0;i=this._slots[i].next)if(this._slots[i].hashCode===hashCode&&this._comparer.equals(this._slots[i].value,item))return!0;return!1},copyTo$1:function(array,arrayIndex){this.copyTo$2(array,arrayIndex,this._count)},copyTo:function(array){this.copyTo$2(array,0,this._count)},copyTo$2:function(array,arrayIndex,count){var numCopied,i;if(array===null)throw new Bridge.ArgumentNullException("array");if(arrayIndex<0)throw new Bridge.ArgumentOutOfRangeException("arrayIndex");if(count<0)throw new Bridge.ArgumentOutOfRangeException("count");if(arrayIndex>array.length||count>array.length-arrayIndex)throw new Bridge.ArgumentException("Destination array is not long enough to copy all the items in the collection. Check array index and length.");for(numCopied=0,i=0;i<this._lastIndex&&numCopied<count;i++)this._slots[i].hashCode>=0&&(array[arrayIndex+numCopied]=this._slots[i].value,numCopied++)},remove:function(item){var i;if(this._buckets!==null){var hashCode=this.internalGetHashCode(item),bucket=hashCode%this._buckets.length,last=-1;for(i=this._buckets[bucket]-1;i>=0;last=i,i=this._slots[i].next)if(this._slots[i].hashCode===hashCode&&this._comparer.equals(this._slots[i].value,item))return last<0?this._buckets[bucket]=this._slots[i].next+1:this._slots[last].next=this._slots[i].next,this._slots[i].hashCode=-1,this._slots[i].value=Bridge.getDefaultValue(T),this._slots[i].next=this._freeList,this._count--,this._version++,this._count===0?(this._lastIndex=0,this._freeList=-1):this._freeList=i,!0}return!1},getEnumerator$2:function(){return new Bridge.Collections.HashSet$1.Enumerator(T)("constructor$1",this)},getEnumerator$1:function(){return new Bridge.Collections.HashSet$1.Enumerator(T)("constructor$1",this)},getEnumerator:function(){return new Bridge.Collections.HashSet$1.Enumerator(T)("constructor$1",this)},unionWith:function(other){var $t,item;if(other===null)throw new Bridge.ArgumentNullException("other");for($t=Bridge.getEnumerator(other);$t.moveNext();)item=$t.getCurrent(),this.addIfNotPresent(item)},intersectWith:function(other){var otherAsCollection,otherAsSet;if(other===null)throw new Bridge.ArgumentNullException("other");if(this._count!==0){if(otherAsCollection=Bridge.as(other,Bridge.ICollection$1(T)),otherAsCollection!==null){if(Bridge.Array.getCount(otherAsCollection)===0){this.clear();return}if(otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T)),otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet)){this.intersectWithHashSetWithSameEC(otherAsSet);return}}this.intersectWithEnumerable(other)}},exceptWith:function(other){var $t,element;if(other===null)throw new Bridge.ArgumentNullException("other");if(this._count!==0){if(other===this){this.clear();return}for($t=Bridge.getEnumerator(other);$t.moveNext();)element=$t.getCurrent(),this.remove(element)}},symmetricExceptWith:function(other){if(other===null)throw new Bridge.ArgumentNullException("other");if(this._count===0){this.unionWith(other);return}if(other===this){this.clear();return}var otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T));otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet)?this.symmetricExceptWithUniqueHashSet(otherAsSet):this.symmetricExceptWithEnumerable(other)},isSubsetOf:function(other){var otherAsSet,result;if(other===null)throw new Bridge.ArgumentNullException("other");return this._count===0?!0:(otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T)),otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet)?this._count>otherAsSet.getCount()?!1:this.isSubsetOfHashSetWithSameEC(otherAsSet):(result=this.checkUniqueAndUnfoundElements(other,!1),result.uniqueCount===this._count&&result.unfoundCount>=0))},isProperSubsetOf:function(other){var otherAsCollection,otherAsSet,result;if(other===null)throw new Bridge.ArgumentNullException("other");if(otherAsCollection=Bridge.as(other,Bridge.ICollection$1(T)),otherAsCollection!==null){if(this._count===0)return Bridge.Array.getCount(otherAsCollection)>0;if(otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T)),otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet))return this._count>=otherAsSet.getCount()?!1:this.isSubsetOfHashSetWithSameEC(otherAsSet)}return result=this.checkUniqueAndUnfoundElements(other,!1),result.uniqueCount===this._count&&result.unfoundCount>0},isSupersetOf:function(other){var otherAsCollection,otherAsSet;if(other===null)throw new Bridge.ArgumentNullException("other");if(otherAsCollection=Bridge.as(other,Bridge.ICollection$1(T)),otherAsCollection!==null){if(Bridge.Array.getCount(otherAsCollection)===0)return!0;if(otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T)),otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet)&&otherAsSet.getCount()>this._count)return!1}return this.containsAllElements(other)},isProperSupersetOf:function(other){var otherAsCollection,otherAsSet,result;if(other===null)throw new Bridge.ArgumentNullException("other");if(this._count===0)return!1;if(otherAsCollection=Bridge.as(other,Bridge.ICollection$1(T)),otherAsCollection!==null){if(Bridge.Array.getCount(otherAsCollection)===0)return!0;if(otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T)),otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet))return otherAsSet.getCount()>=this._count?!1:this.containsAllElements(otherAsSet)}return result=this.checkUniqueAndUnfoundElements(other,!0),result.uniqueCount<this._count&&result.unfoundCount===0},overlaps:function(other){var $t,element;if(other===null)throw new Bridge.ArgumentNullException("other");if(this._count===0)return!1;for($t=Bridge.getEnumerator(other);$t.moveNext();)if(element=$t.getCurrent(),this.contains(element))return!0;return!1},setEquals:function(other){var otherAsSet,otherAsCollection,result;if(other===null)throw new Bridge.ArgumentNullException("other");return otherAsSet=Bridge.as(other,Bridge.Collections.HashSet$1(T)),otherAsSet!==null&&Bridge.get(Bridge.Collections.HashSet$1(T)).areEqualityComparersEqual(this,otherAsSet)?this._count!==otherAsSet.getCount()?!1:this.containsAllElements(otherAsSet):(otherAsCollection=Bridge.as(other,Bridge.ICollection$1(T)),otherAsCollection!==null&&this._count===0&&Bridge.Array.getCount(otherAsCollection)>0)?!1:(result=this.checkUniqueAndUnfoundElements(other,!0),result.uniqueCount===this._count&&result.unfoundCount===0)},removeWhere:function(match){var numRemoved,i,value;if(match===null)throw new Bridge.ArgumentNullException("match");for(numRemoved=0,i=0;i<this._lastIndex;i++)this._slots[i].hashCode>=0&&(value=this._slots[i].value,match(value)&&this.remove(value)&&numRemoved++);return numRemoved},trimExcess:function(){var i,bucket;if(this._count===0)this._buckets=null,this._slots=null,this._version++;else{var newSize=Bridge.get(Bridge.Collections.HashHelpers).getPrime(this._count),newSlots=Bridge.Array.init(newSize,function(){return new Bridge.Collections.HashSet$1.Slot(T)()}),newBuckets=Bridge.Array.init(newSize,0),newIndex=0;for(i=0;i<this._lastIndex;i++)this._slots[i].hashCode>=0&&(newSlots[newIndex]=this._slots[i],bucket=newSlots[newIndex].hashCode%newSize,newSlots[newIndex].next=newBuckets[bucket]-1,newBuckets[bucket]=newIndex+1,newIndex++);this._lastIndex=newIndex;this._slots=newSlots;this._buckets=newBuckets;this._freeList=-1}},initialize:function(capacity){var size=Bridge.get(Bridge.Collections.HashHelpers).getPrime(capacity);this._buckets=Bridge.Array.init(size,0);this._slots=Bridge.Array.init(size,function(){return new Bridge.Collections.HashSet$1.Slot(T)()})},increaseCapacity:function(){var newSize=Bridge.get(Bridge.Collections.HashHelpers).expandPrime(this._count);if(newSize<=this._count)throw new Bridge.ArgumentException("HashSet capacity is too big.");this.setCapacity(newSize,!1)},setCapacity:function(newSize,forceNewHashCodes){var newSlots=Bridge.Array.init(newSize,function(){return new Bridge.Collections.HashSet$1.Slot(T)()}),i,i1,newBuckets,i2,bucket;if(this._slots!==null)for(i=0;i<this._lastIndex;i++)newSlots[i]=this._slots[i];if(forceNewHashCodes)for(i1=0;i1<this._lastIndex;i1++)newSlots[i1].hashCode!==-1&&(newSlots[i1].hashCode=this.internalGetHashCode(newSlots[i1].value));for(newBuckets=Bridge.Array.init(newSize,0),i2=0;i2<this._lastIndex;i2++)bucket=newSlots[i2].hashCode%newSize,newSlots[i2].next=newBuckets[bucket]-1,newBuckets[bucket]=i2+1;this._slots=newSlots;this._buckets=newBuckets},addIfNotPresent:function(value){var hashCode,bucket,i,index;for(this._buckets===null&&this.initialize(0),hashCode=this.internalGetHashCode(value),bucket=hashCode%this._buckets.length,i=this._buckets[bucket]-1;i>=0;i=this._slots[i].next)if(this._slots[i].hashCode===hashCode&&this._comparer.equals(this._slots[i].value,value))return!1;return this._freeList>=0?(index=this._freeList,this._freeList=this._slots[index].next):(this._lastIndex===this._slots.length&&(this.increaseCapacity(),bucket=hashCode%this._buckets.length),index=this._lastIndex,this._lastIndex++),this._slots[index].hashCode=hashCode,this._slots[index].value=value,this._slots[index].next=this._buckets[bucket]-1,this._buckets[bucket]=index+1,this._count++,this._version++,!0},containsAllElements:function(other){for(var element,$t=Bridge.getEnumerator(other);$t.moveNext();)if(element=$t.getCurrent(),!this.contains(element))return!1;return!0},isSubsetOfHashSetWithSameEC:function(other){for(var item,$t=Bridge.getEnumerator(this);$t.moveNext();)if(item=$t.getCurrent(),!other.contains(item))return!1;return!0},intersectWithHashSetWithSameEC:function(other){for(var item,i=0;i<this._lastIndex;i++)this._slots[i].hashCode>=0&&(item=this._slots[i].value,other.contains(item)||this.remove(item))},intersectWithEnumerable:function(other){for(var originalLastIndex=this._lastIndex,intArrayLength=Bridge.get(Bridge.Collections.BitHelper).toIntArrayLength(originalLastIndex),bitArray=Bridge.Array.init(intArrayLength,0),item,index,i,bitHelper=new Bridge.Collections.BitHelper(bitArray,intArrayLength),$t=Bridge.getEnumerator(other);$t.moveNext();)item=$t.getCurrent(),index=this.internalIndexOf(item),index>=0&&bitHelper.markBit(index);for(i=0;i<originalLastIndex;i++)this._slots[i].hashCode>=0&&!bitHelper.isMarked(i)&&this.remove(this._slots[i].value)},internalIndexOf:function(item){for(var hashCode=this.internalGetHashCode(item),i=this._buckets[hashCode%this._buckets.length]-1;i>=0;i=this._slots[i].next)if(this._slots[i].hashCode===hashCode&&this._comparer.equals(this._slots[i].value,item))return i;return-1},symmetricExceptWithUniqueHashSet:function(other){for(var item,$t=Bridge.getEnumerator(other);$t.moveNext();)item=$t.getCurrent(),this.remove(item)||this.addIfNotPresent(item)},symmetricExceptWithEnumerable:function(other){var $t,originalLastIndex=this._lastIndex,intArrayLength=Bridge.get(Bridge.Collections.BitHelper).toIntArrayLength(originalLastIndex),itemsToRemove,itemsAddedFromOther,itemsToRemoveArray=Bridge.Array.init(intArrayLength,0),itemsAddedFromOtherArray,i;for(itemsToRemove=new Bridge.Collections.BitHelper(itemsToRemoveArray,intArrayLength),itemsAddedFromOtherArray=Bridge.Array.init(intArrayLength,0),itemsAddedFromOther=new Bridge.Collections.BitHelper(itemsAddedFromOtherArray,intArrayLength),$t=Bridge.getEnumerator(other);$t.moveNext();){var item=$t.getCurrent(),location={v:0},added=this.addOrGetLocation(item,location);added?itemsAddedFromOther.markBit(location.v):location.v<originalLastIndex&&!itemsAddedFromOther.isMarked(location.v)&&itemsToRemove.markBit(location.v)}for(i=0;i<originalLastIndex;i++)itemsToRemove.isMarked(i)&&this.remove(this._slots[i].value)},addOrGetLocation:function(value,location){for(var index,hashCode=this.internalGetHashCode(value),bucket=hashCode%this._buckets.length,i=this._buckets[bucket]-1;i>=0;i=this._slots[i].next)if(this._slots[i].hashCode===hashCode&&this._comparer.equals(this._slots[i].value,value))return location.v=i,!1;return this._freeList>=0?(index=this._freeList,this._freeList=this._slots[index].next):(this._lastIndex===this._slots.length&&(this.increaseCapacity(),bucket=hashCode%this._buckets.length),index=this._lastIndex,this._lastIndex++),this._slots[index].hashCode=hashCode,this._slots[index].value=value,this._slots[index].next=this._buckets[bucket]-1,this._buckets[bucket]=index+1,this._count++,this._version++,location.v=index,!0},checkUniqueAndUnfoundElements:function(other,returnIfUnfound){var $t,$t1,result=new Bridge.Collections.HashSet$1.ElementCount(T)(),numElementsInOther,item,unfoundCount,uniqueFoundCount,item1,index;if(this._count===0){for(numElementsInOther=0,$t=Bridge.getEnumerator(other);$t.moveNext();){item=$t.getCurrent();numElementsInOther++;break}return result.uniqueCount=0,result.unfoundCount=numElementsInOther,result.$clone()}var originalLastIndex=this._lastIndex,intArrayLength=Bridge.get(Bridge.Collections.BitHelper).toIntArrayLength(originalLastIndex),bitHelper,bitArray=Bridge.Array.init(intArrayLength,0);for(bitHelper=new Bridge.Collections.BitHelper(bitArray,intArrayLength),unfoundCount=0,uniqueFoundCount=0,$t1=Bridge.getEnumerator(other);$t1.moveNext();)if(item1=$t1.getCurrent(),index=this.internalIndexOf(item1),index>=0)bitHelper.isMarked(index)||(bitHelper.markBit(index),uniqueFoundCount++);else if(unfoundCount++,returnIfUnfound)break;return result.uniqueCount=uniqueFoundCount,result.unfoundCount=unfoundCount,result.$clone()},toArray:function(){var newArray=Bridge.Array.init(this.getCount(),null);return this.copyTo(newArray),newArray},internalGetHashCode:function(item){return item===null?0:this._comparer.getHashCode(item,!0)&Bridge.get(Bridge.Collections.HashSet$1(T)).Lower31BitMask}}});Bridge.define("Bridge.Collections.HashSet$1.ElementCount",function(){return{uniqueCount:0,unfoundCount:0,constructor:function(){},getHashCode:function(){var hash=17;return hash=hash*23+(this.uniqueCount==null?0:Bridge.getHashCode(this.uniqueCount)),hash*23+(this.unfoundCount==null?0:Bridge.getHashCode(this.unfoundCount))},equals:function(o){return Bridge.is(o,Bridge.Collections.HashSet$1.ElementCount)?Bridge.equals(this.uniqueCount,o.uniqueCount)&&Bridge.equals(this.unfoundCount,o.unfoundCount):!1},$clone:function(to){var s=to||new Bridge.Collections.HashSet$1.ElementCount;return s.uniqueCount=this.uniqueCount,s.unfoundCount=this.unfoundCount,s}}});Bridge.define("Bridge.Collections.HashSet$1.Enumerator",function(T){return{inherits:[Bridge.IEnumerator$1(T)],_set:null,_index:0,_version:0,_current:null,constructor$1:function(set){this._set=set;this._index=0;this._version=set._version;this._current=Bridge.getDefaultValue(T)},constructor:function(){},getCurrent$1:function(){return this._current},getCurrent:function(){if(this._index===0||this._index===this._set._lastIndex+1)throw new Bridge.InvalidOperationException("Enumeration has either not started or has already finished.");return this.getCurrent$1()},dispose:function(){},moveNext:function(){if(this._version!==this._set._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");while(this._index<this._set._lastIndex){if(this._set._slots[this._index].hashCode>=0)return this._current=this._set._slots[this._index].value,this._index++,!0;this._index++}return this._index=this._set._lastIndex+1,this._current=Bridge.getDefaultValue(T),!1},reset:function(){if(this._version!==this._set._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");this._index=0;this._current=Bridge.getDefaultValue(T)},getHashCode:function(){var hash=17;return hash=hash*23+(this._set==null?0:Bridge.getHashCode(this._set)),hash=hash*23+(this._index==null?0:Bridge.getHashCode(this._index)),hash=hash*23+(this._version==null?0:Bridge.getHashCode(this._version)),hash*23+(this._current==null?0:Bridge.getHashCode(this._current))},equals:function(o){return Bridge.is(o,Bridge.Collections.HashSet$1.Enumerator)?Bridge.equals(this._set,o._set)&&Bridge.equals(this._index,o._index)&&Bridge.equals(this._version,o._version)&&Bridge.equals(this._current,o._current):!1},$clone:function(to){var s=to||new Bridge.Collections.HashSet$1.Enumerator;return s._set=this._set,s._index=this._index,s._version=this._version,s._current=this._current,s}}});Bridge.define("Bridge.Collections.HashSet$1.Slot",function(){return{hashCode:0,value:null,next:0,constructor:function(){},getHashCode:function(){var hash=17;return hash=hash*23+(this.hashCode==null?0:Bridge.getHashCode(this.hashCode)),hash=hash*23+(this.value==null?0:Bridge.getHashCode(this.value)),hash*23+(this.next==null?0:Bridge.getHashCode(this.next))},equals:function(o){return Bridge.is(o,Bridge.Collections.HashSet$1.Slot)?Bridge.equals(this.hashCode,o.hashCode)&&Bridge.equals(this.value,o.value)&&Bridge.equals(this.next,o.next):!1},$clone:function(to){var s=to||new Bridge.Collections.HashSet$1.Slot;return s.hashCode=this.hashCode,s.value=this.value,s.next=this.next,s}}});Bridge.define("Bridge.Collections.Queue$1",function(T){return{inherits:[Bridge.IEnumerable$1(T),Bridge.ICollection],statics:{MinimumGrow:4,GrowFactor:200,DefaultCapacity:4},_array:null,_head:0,_tail:0,_size:0,_version:0,constructor:function(){this._array=Bridge.Array.init(0,null)},constructor$2:function(capacity){if(capacity<0)throw new Bridge.ArgumentOutOfRangeException("capacity","Non-negative number required.");this._array=Bridge.Array.init(capacity,null)},constructor$1:function(collection){if(collection===null)throw new Bridge.ArgumentNullException("collection");this._array=Bridge.Array.init(Bridge.get(Bridge.Collections.Queue$1(T)).DefaultCapacity,null);var en=Bridge.getEnumerator(collection,"$1");try{while(en.moveNext())this.enqueue(en.getCurrent$1())}finally{Bridge.hasValue(en)&&en.dispose()}},getCount:function(){return this._size},clear:function(){this._head<this._tail?Bridge.Array.fill(this._array,T.getDefaultValue||Bridge.getDefaultValue(T),this._head,this._size):(Bridge.Array.fill(this._array,T.getDefaultValue||Bridge.getDefaultValue(T),this._head,this._array.length-this._head),Bridge.Array.fill(this._array,T.getDefaultValue||Bridge.getDefaultValue(T),0,this._tail));this._head=0;this._tail=0;this._size=0;this._version++},copyTo:function(array,arrayIndex){var arrayLen,numToCopy,firstPart;if(array===null)throw new Bridge.ArgumentNullException("array");if(arrayIndex<0||arrayIndex>array.length)throw new Bridge.ArgumentOutOfRangeException("arrayIndex","Index was out of range. Must be non-negative and less than the size of the collection.");if(arrayLen=array.length,arrayLen-arrayIndex<this._size)throw new Bridge.ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.");(numToCopy=arrayLen-arrayIndex<this._size?arrayLen-arrayIndex:this._size,numToCopy!==0)&&(firstPart=this._array.length-this._head<numToCopy?this._array.length-this._head:numToCopy,Bridge.Array.copy(this._array,this._head,array,arrayIndex,firstPart),numToCopy-=firstPart,numToCopy>0&&Bridge.Array.copy(this._array,0,array,arrayIndex+this._array.length-this._head,numToCopy))},enqueue:function(item){if(this._size===this._array.length){var newcapacity=Bridge.Int.div(this._array.length*Bridge.get(Bridge.Collections.Queue$1(T)).GrowFactor,100);newcapacity<this._array.length+Bridge.get(Bridge.Collections.Queue$1(T)).MinimumGrow&&(newcapacity=this._array.length+Bridge.get(Bridge.Collections.Queue$1(T)).MinimumGrow);this.setCapacity(newcapacity)}this._array[this._tail]=item;this._tail=this.moveNext(this._tail);this._size++;this._version++},getEnumerator$2:function(){return new Bridge.Collections.Queue$1.Enumerator(T)("constructor$1",this)},getEnumerator$1:function(){return new Bridge.Collections.Queue$1.Enumerator(T)("constructor$1",this)},getEnumerator:function(){return new Bridge.Collections.Queue$1.Enumerator(T)("constructor$1",this)},dequeue:function(){if(this._size===0)throw new Bridge.InvalidOperationException("Queue empty.");var removed=this._array[this._head];return this._array[this._head]=Bridge.getDefaultValue(T),this._head=this.moveNext(this._head),this._size--,this._version++,removed},peek:function(){if(this._size===0)throw new Bridge.InvalidOperationException("Queue empty.");return this._array[this._head]},contains:function(item){for(var index=this._head,count=this._size,c=new Bridge.EqualityComparer$1(T)();count-->0;){if(item===null){if(this._array[index]===null)return!0}else if(this._array[index]!==null&&c.equals(this._array[index],item))return!0;index=this.moveNext(index)}return!1},getElement:function(i){return this._array[(this._head+i)%this._array.length]},toArray:function(){var arr=Bridge.Array.init(this._size,null);return this._size===0?arr:(this._head<this._tail?Bridge.Array.copy(this._array,this._head,arr,0,this._size):(Bridge.Array.copy(this._array,this._head,arr,0,this._array.length-this._head),Bridge.Array.copy(this._array,0,arr,this._array.length-this._head,this._tail)),arr)},setCapacity:function(capacity){var newarray=Bridge.Array.init(capacity,null);this._size>0&&(this._head<this._tail?Bridge.Array.copy(this._array,this._head,newarray,0,this._size):(Bridge.Array.copy(this._array,this._head,newarray,0,this._array.length-this._head),Bridge.Array.copy(this._array,0,newarray,this._array.length-this._head,this._tail)));this._array=newarray;this._head=0;this._tail=this._size===capacity?0:this._size;this._version++},moveNext:function(index){var tmp=index+1;return tmp===this._array.length?0:tmp},trimExcess:function(){var threshold=Bridge.Int.trunc(this._array.length*.9);this._size<threshold&&this.setCapacity(this._size)}}});Bridge.define("Bridge.Collections.Queue$1.Enumerator",function(T){return{inherits:[Bridge.IEnumerator$1(T),Bridge.IEnumerator],_q:null,_index:0,_version:0,_currentElement:null,constructor$1:function(q){this._q=q;this._version=this._q._version;this._index=-1;this._currentElement=Bridge.getDefaultValue(T)},constructor:function(){},getCurrent$1:function(){if(this._index<0)if(this._index===-1)throw new Bridge.InvalidOperationException("Enumeration has not started. Call MoveNext.");else throw new Bridge.InvalidOperationException("Enumeration already finished.");return this._currentElement},getCurrent:function(){return this.getCurrent$1()},dispose:function(){this._index=-2;this._currentElement=Bridge.getDefaultValue(T)},moveNext:function(){if(this._version!==this._q._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");return this._index===-2?!1:(this._index++,this._index===this._q._size)?(this._index=-2,this._currentElement=Bridge.getDefaultValue(T),!1):(this._currentElement=this._q.getElement(this._index),!0)},reset:function(){if(this._version!==this._q._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");this._index=-1;this._currentElement=Bridge.getDefaultValue(T)},getHashCode:function(){var hash=17;return hash=hash*23+(this._q==null?0:Bridge.getHashCode(this._q)),hash=hash*23+(this._index==null?0:Bridge.getHashCode(this._index)),hash=hash*23+(this._version==null?0:Bridge.getHashCode(this._version)),hash*23+(this._currentElement==null?0:Bridge.getHashCode(this._currentElement))},equals:function(o){return Bridge.is(o,Bridge.Collections.Queue$1.Enumerator)?Bridge.equals(this._q,o._q)&&Bridge.equals(this._index,o._index)&&Bridge.equals(this._version,o._version)&&Bridge.equals(this._currentElement,o._currentElement):!1},$clone:function(to){var s=to||new Bridge.Collections.Queue$1.Enumerator;return s._q=this._q,s._index=this._index,s._version=this._version,s._currentElement=this._currentElement,s}}});Bridge.define("Bridge.Collections.Stack$1",function(T){return{inherits:[Bridge.IEnumerable$1(T),Bridge.ICollection],statics:{DefaultCapacity:4},_array:null,_size:0,_version:0,constructor:function(){this._array=Bridge.Array.init(0,null)},constructor$2:function(capacity){if(capacity<0)throw new Bridge.ArgumentOutOfRangeException("capacity","Non-negative number required.");this._array=Bridge.Array.init(capacity,null)},constructor$1:function(collection){if(collection===null)throw new Bridge.ArgumentNullException("collection");var length={};this._array=Bridge.get(Bridge.Collections.EnumerableHelpers).toArray$1(T)(collection,length);this._size=length.v},getCount:function(){return this._size},clear:function(){Bridge.Array.fill(this._array,T.getDefaultValue||Bridge.getDefaultValue(T),0,this._size);this._size=0;this._version++},contains:function(item){for(var count=this._size,c=new Bridge.EqualityComparer$1(T)();count-->0;)if(item===null){if(this._array[count]===null)return!0}else if(this._array[count]!==null&&c.equals(this._array[count],item))return!0;return!1},copyTo:function(array,arrayIndex){var srcIndex,dstIndex,i;if(array===null)throw new Bridge.ArgumentNullException("array");if(arrayIndex<0||arrayIndex>array.length)throw new Bridge.ArgumentOutOfRangeException("arrayIndex","Non-negative number required.");if(array.length-arrayIndex<this._size)throw new Bridge.ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.");if(array!==this._array)for(srcIndex=0,dstIndex=arrayIndex+this._size,i=0;i<this._size;i++)array[--dstIndex]=this._array[srcIndex++];else Bridge.Array.copy(this._array,0,array,arrayIndex,this._size),Bridge.Array.reverse(array,arrayIndex,this._size)},copyTo$1:function(array,arrayIndex){if(array===null)throw new Bridge.ArgumentNullException("array");if(Bridge.Array.getRank(array)!==1)throw new Bridge.ArgumentException("Only single dimensional arrays are supported for the requested action.");if(Bridge.Array.getLower(array,0)!==0)throw new Bridge.ArgumentException("The lower bound of target array must be zero.");if(arrayIndex<0||arrayIndex>array.length)throw new Bridge.ArgumentOutOfRangeException("arrayIndex","Non-negative number required.");if(array.length-arrayIndex<this._size)throw new Bridge.ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.");try{Bridge.Array.copy(this._array,0,array,arrayIndex,this._size);Bridge.Array.reverse(array,arrayIndex,this._size)}catch($e){$e=Bridge.Exception.create($e);throw new Bridge.ArgumentException("Target array type is not compatible with the type of items in the collection.");}},getEnumerator$2:function(){return new Bridge.Collections.Stack$1.Enumerator(T)("constructor$1",this)},getEnumerator$1:function(){return new Bridge.Collections.Stack$1.Enumerator(T)("constructor$1",this)},getEnumerator:function(){return new Bridge.Collections.Stack$1.Enumerator(T)("constructor$1",this)},trimExcess:function(){var threshold=Bridge.Int.trunc(Bridge.cast(this._array.length,Number)*.9);this._size<threshold&&(Bridge.Array.resize(this._array,this._size,T.getDefaultValue||Bridge.getDefaultValue(T)),this._version++)},peek:function(){if(this._size===0)throw new Bridge.InvalidOperationException("Stack empty.");return this._array[this._size-1]},pop:function(){if(this._size===0)throw new Bridge.InvalidOperationException("Stack empty.");this._version++;var item=this._array[--this._size];return this._array[this._size]=Bridge.getDefaultValue(T),item},push:function(item){this._size===this._array.length&&Bridge.Array.resize(this._array,this._array.length===0?Bridge.get(Bridge.Collections.Stack$1(T)).DefaultCapacity:2*this._array.length,T.getDefaultValue||Bridge.getDefaultValue(T));this._array[this._size++]=item;this._version++},toArray:function(){for(var objArray=Bridge.Array.init(this._size,null),i=0;i<this._size;)objArray[i]=this._array[this._size-i-1],i++;return objArray}}});Bridge.define("Bridge.Collections.Stack$1.Enumerator",function(T){return{inherits:[Bridge.IEnumerator$1(T),Bridge.IEnumerator],_stack:null,_index:0,_version:0,_currentElement:null,constructor$1:function(stack){this._stack=stack;this._version=this._stack._version;this._index=-2;this._currentElement=Bridge.getDefaultValue(T)},constructor:function(){},getCurrent$1:function(){if(this._index===-2)throw new Bridge.InvalidOperationException("Enumeration has not started. Call MoveNext.");if(this._index===-1)throw new Bridge.InvalidOperationException("Enumeration already finished.");return this._currentElement},getCurrent:function(){if(this._index===-2)throw new Bridge.InvalidOperationException("Enumeration has not started. Call MoveNext.");if(this._index===-1)throw new Bridge.InvalidOperationException("Enumeration already finished.");return this._currentElement},dispose:function(){this._index=-1},moveNext:function(){var retval;if(this._version!==this._stack._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");return this._index===-2?(this._index=this._stack._size-1,retval=this._index>=0,retval&&(this._currentElement=this._stack._array[this._index]),retval):this._index===-1?!1:(retval=--this._index>=0,this._currentElement=retval?this._stack._array[this._index]:Bridge.getDefaultValue(T),retval)},reset:function(){if(this._version!==this._stack._version)throw new Bridge.InvalidOperationException("Collection was modified; enumeration operation may not execute.");this._index=-2;this._currentElement=Bridge.getDefaultValue(T)},getHashCode:function(){var hash=17;return hash=hash*23+(this._stack==null?0:Bridge.getHashCode(this._stack)),hash=hash*23+(this._index==null?0:Bridge.getHashCode(this._index)),hash=hash*23+(this._version==null?0:Bridge.getHashCode(this._version)),hash*23+(this._currentElement==null?0:Bridge.getHashCode(this._currentElement))},equals:function(o){return Bridge.is(o,Bridge.Collections.Stack$1.Enumerator)?Bridge.equals(this._stack,o._stack)&&Bridge.equals(this._index,o._index)&&Bridge.equals(this._version,o._version)&&Bridge.equals(this._currentElement,o._currentElement):!1},$clone:function(to){var s=to||new Bridge.Collections.Stack$1.Enumerator;return s._stack=this._stack,s._index=this._index,s._version=this._version,s._currentElement=this._currentElement,s}}});Bridge.init();