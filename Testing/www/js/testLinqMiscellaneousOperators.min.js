"use strict";Bridge.define("ClientTestLibrary.Linq.TestLinqMiscellaneousOperators",{statics:{test:function(assert){var a,b,c,d;assert.expect(4);var concatNumbers=[4,1,3].concat([2,3,5]);assert.deepEqual(concatNumbers,[4,1,3,2,3,5],"Concat() numbers");var names=Bridge.Linq.Enumerable.from(Bridge.get(ClientTestLibrary.Utilities.Person).getPersons()).select(function(p){return p.getName()}),cities=Bridge.Linq.Enumerable.from(Bridge.get(ClientTestLibrary.Utilities.Person).getPersons()).select(function(p){return p.getCity()}),concatNames=names.concat(cities).toArray();assert.deepEqual(concatNames,["Frank","Zeppa","John","Billy","Dora","Ian","Mary","Nemo","Edmonton","Tokyo","Lisbon","Paris","Budapest","Rome","Dortmund","Ocean"],"Concat() two sequences");a=["a","b","z"];b=["a","b","z"];assert.ok(Bridge.Linq.Enumerable.from(a).sequenceEqual(b),"SequenceEqual() for equal sequences");c=["a","b","z"];d=["a","z","b"];assert.ok(!Bridge.Linq.Enumerable.from(c).sequenceEqual(d),"SequenceEqual() for not equal sequences")}}});Bridge.init();