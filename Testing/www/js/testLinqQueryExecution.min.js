"use strict";Bridge.define("ClientTestLibrary.Linq.TestLinqQueryExecution",{statics:{test:function(assert){var bQuery,smallNumbers,smallerEvenNumbers;assert.expect(6);var numbers=[5,4,1,3,9,8,6,7,2,0],i=0,aQuery=Bridge.Linq.Enumerable.from(numbers).select(function(){return++i});assert.equal(i,0,"Query is not executed until you enumerate over them");aQuery.toList(Bridge.Int);assert.equal(i,10,"Query is  executed after you enumerate over them");i=0;bQuery=Bridge.Linq.Enumerable.from(numbers).select(function(){return++i}).max();assert.equal(i,10,"Max() executes immediately");smallNumbers=Bridge.Linq.Enumerable.from(numbers).where(function(n){return n<=3});smallerEvenNumbers=smallNumbers.where(function(n){return n%2==0});assert.deepEqual(smallerEvenNumbers.toArray(),[2,0],"Query in a query");Bridge.Linq.Enumerable.from(numbers).forEach(function(x,index){numbers[index]=-numbers[index]});assert.deepEqual(Bridge.Linq.Enumerable.from(numbers).toArray(),[-5,-4,-1,-3,-9,-8,-6,-7,-2,0],"ForEach()");assert.deepEqual(smallerEvenNumbers.toArray(),[-4,-8,-6,-2,0],"Second query run on a modified source")}}});Bridge.init();