"use strict";Bridge.define("ClientTestLibrary.Utilities.DecimalHelper",{statics:{assertIsDecimalAndEqualTo$1:function(assert,v,d,message){message===void 0&&(message=null);assert.strictEqual(Bridge.is(v,Bridge.Decimal),!0,message);assert.strictEqual(v.toString(),d.toString(),message)},assertIsDecimalAndEqualTo:function(assert,v,d,message){message===void 0&&(message=null);assert.strictEqual(Bridge.is(v,Bridge.Decimal),!0,message);assert.strictEqual(v.toString(),d.toString(),message)}}});Bridge.define("ClientTestLibrary.Utilities.BrowserHelper",{statics:{isPhantomJs:function(){return Bridge.String.contains(navigator.userAgent,"PhantomJS")},isFirefox:function(){return Bridge.String.contains(navigator.userAgent,"Firefox")},isChrome:function(){return Bridge.String.contains(navigator.userAgent,"Chrome")},getBrowserInfo:function(){var userAgent=navigator.userAgent,appVersion=navigator.appVersion,product=navigator.product,appName=navigator.appName,appCodeName=navigator.appCodeName;return Bridge.String.format("userAgent:{0} appVersion:{1} product:{2} appName:{3} appCodeName:{4}",userAgent,appVersion,product,appName,appCodeName)}}});Bridge.define("ClientTestLibrary.Utilities.Group",{statics:{getGroups:function(){var groups=new Bridge.List$1(ClientTestLibrary.Utilities.Group)();return groups.add(Bridge.merge(new ClientTestLibrary.Utilities.Group,{setName:"A",setLimit:1e3})),groups.add(Bridge.merge(new ClientTestLibrary.Utilities.Group,{setName:"B",setLimit:400})),groups.add(Bridge.merge(new ClientTestLibrary.Utilities.Group,{setName:"C",setLimit:800})),groups.add(Bridge.merge(new ClientTestLibrary.Utilities.Group,{setName:"D",setLimit:200})),groups}},config:{properties:{Name:null,Limit:0}}});Bridge.define("ClientTestLibrary.Utilities.Person",{statics:{getPersons:function(){var persons=new Bridge.List$1(ClientTestLibrary.Utilities.Person)();return persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:1,setName:"Frank",setCity:"Edmonton",setCount:300,setGroup:"A"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:2,setName:"Zeppa",setCity:"Tokyo",setCount:100,setGroup:"C"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:3,setName:"John",setCity:"Lisbon",setCount:700,setGroup:"B"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:4,setName:"Billy",setCity:"Paris",setCount:500,setGroup:"C"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:5,setName:"Dora",setCity:"Budapest",setCount:50,setGroup:"B"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:6,setName:"Ian",setCity:"Rome",setCount:550,setGroup:"B"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:7,setName:"Mary",setCity:"Dortmund",setCount:700,setGroup:"B"})),persons.add(Bridge.merge(new ClientTestLibrary.Utilities.Person,{setID:8,setName:"Nemo",setCity:"Ocean",setCount:3e3,setGroup:null})),persons}},config:{properties:{ID:0,Name:null,City:null,Count:0,Group:null}}});Bridge.define("ClientTestLibrary.Utilities.TypeHelper",{statics:{getTypeName:function(o){return Bridge.getTypeName(o)}}});Bridge.init();