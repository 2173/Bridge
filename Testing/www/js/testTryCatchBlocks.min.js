"use strict";Bridge.define("ClientTestLibrary.TestTryCatchBlocks",{statics:{config:{properties:{IsATry:!1,IsACatch:!1,IsBTry:!1,IsBCatch:!1,IsCTry:!1,IsCCatch:!1,IsDTry:!1,IsDCatch:!1}},simpleTryCatch:function(n){n.expect(1);var t=Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatch("Good");n.equal(t,"Good","TryCatch() executes")},caughtExceptions:function(n){n.expect(3);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithCaughtException();n.ok(!0,"Exception catch");Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithCaughtTypedException();n.ok(!0,"Typed exception catch");var t=Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithCaughtArgumentException();n.deepEqual(t,"catch me","Typed exception catch with exception message")},thrownExceptions:function(n){n.expect(12);n.throws(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithNotCaughtTypedException,"catch me","A.Typed exception is not Caught");n.ok(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsATry(),"A. exception not caught - try section called");n.ok(!Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsACatch(),"A. exception not caught - catch section not called");n.throws(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithNotCaughtTypedExceptionAndArgument,"catch me","[#229] B. Typed exception is not Caught; and argument");n.ok(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsBTry(),"[#229] B. exception not caught - try section called");n.ok(!Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsBCatch(),"B. exception not caught - catch section not called");n.throws(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithRethrow,"catch me","[#231] C. Rethrow");n.ok(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsCTry(),"C. exception caught and re-thrown - try section called");n.ok(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsCCatch(),"C. exception caught and re-thrown - catch section called");n.throws(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).tryCatchWithRethrowEx,function(n){return n.toString()==="catch me"},"D. Rethrow with parameter");n.ok(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsDTry(),"D. exception caught and re-thrown  - try section called");n.ok(Bridge.get(ClientTestLibrary.TestTryCatchBlocks).getIsDCatch(),"D. exception caught and re-thrown  - catch section called")},bridge320:function(n){n.expect(1);var i="";try{"someString".SomeNotExistingMethod()}catch(t){t=Bridge.Exception.create(t);i=t.getMessage()}n.ok(Bridge.String.contains(i,"SomeNotExistingMethod"),"ex.Message works on built-in JavaScript type")},bridge343:function(n){var i,r,f,u;n.expect(1);i="";r=0;try{f=Bridge.Int.div(10,r)}catch(t){t=Bridge.Exception.create(t);Bridge.is(t,Bridge.ArgumentException)||(u=t,i=u.getMessage())}n.ok(!Bridge.String.isNullOrEmpty(i),"Double catch block with general Exception works")},tryCatch:function(n){try{return n}catch(t){return t=Bridge.Exception.create(t),""}},tryCatchWithCaughtException:function(){try{throw new Bridge.Exception;}catch(n){n=Bridge.Exception.create(n)}},tryCatchWithCaughtTypedException:function(){try{throw new Bridge.Exception;}catch(n){n=Bridge.Exception.create(n)}},tryCatchWithCaughtArgumentException:function(){try{throw new Bridge.ArgumentException("catch me");}catch(n){n=Bridge.Exception.create(n);var t;if(Bridge.is(n,Bridge.ArgumentException))return t=n,t.getMessage();throw n;}},tryCatchWithNotCaughtTypedException:function(){Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsATry(!1);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsACatch(!1);try{Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsATry(!0);throw new Bridge.Exception("catch me");}catch(n){if(n=Bridge.Exception.create(n),Bridge.is(n,Bridge.ArgumentException))Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsATry(!0);else throw n;}Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsATry(!1)},tryCatchWithNotCaughtTypedExceptionAndArgument:function(){var t,i;Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsBTry(!1);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsBCatch(!1);try{Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsBTry(!0);throw new Bridge.Exception("catch me");}catch(n){if(n=Bridge.Exception.create(n),Bridge.is(n,Bridge.InvalidCastException))t=n,Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsBCatch(!0),i=t.getMessage();else throw n;}Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsBTry(!1)},tryCatchWithRethrow:function(){Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsCTry(!1);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsCCatch(!1);try{Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsCTry(!0);throw new Bridge.InvalidOperationException("catch me");}catch(n){n=Bridge.Exception.create(n);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsCCatch(!0);throw n;}Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsCTry(!1)},tryCatchWithRethrowEx:function(){Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsDTry(!1);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsDCatch(!1);try{Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsDTry(!0);throw new Bridge.ArgumentException("catch me");}catch(n){n=Bridge.Exception.create(n);Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsDCatch(!0);throw n;}Bridge.get(ClientTestLibrary.TestTryCatchBlocks).setIsDTry(!1)}}});Bridge.init();